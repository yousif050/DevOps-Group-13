trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  node_version: '22.x'

stages:
  - stage: Install
    jobs:
      - job: InstallDependencies
        steps:
          - task: UseNode@1
            inputs:
              version: '$(node_version)'
          
          - checkout: self
          
          - script: |
              npm ci
              cd frontend/auth-frontend && npm ci && npm install vite --save-dev && npm install jest --save-dev && cd ../..
              cd frontend/community-frontend && npm ci && npm install vite --save-dev && npm install jest --save-dev && cd ../..
              cd backend/auth-service && npm ci && cd ../..
              cd backend/community-service && npm ci && cd ../..
            displayName: 'Install dependencies with npm ci'

  - stage: BuildAndTest
    jobs:
      - job: BuildTestApp
        steps:
          - task: UseNode@1
            inputs:
              version: '$(node_version)'

          - checkout: self

          - script: |
              # Build and test auth-frontend
              cd frontend/auth-frontend
              npm ci
              npm install vite --save-dev
              npm install jest --save-dev
              npm run build
              npm run test -- --coverage
              cd ../..

              # Build and test community-frontend
              cd frontend/community-frontend
              npm ci
              npm install vite --save-dev
              npm install jest --save-dev
              npm run build
              npm run test -- --coverage
              cd ../..
            displayName: 'Build, Test, and Generate Coverage'

          - task: PublishCodeCoverageResults@1
            displayName: 'Publish Auth Frontend Coverage'
            inputs:
              codeCoverageTool: 'Cobertura'
              summaryFileLocation: 'frontend/auth-frontend/coverage/cobertura-coverage.xml'
              reportDirectory: 'frontend/auth-frontend/coverage'

          - task: PublishCodeCoverageResults@1
            displayName: 'Publish Community Frontend Coverage'
            inputs:
              codeCoverageTool: 'Cobertura'
              summaryFileLocation: 'frontend/community-frontend/coverage/cobertura-coverage.xml'
              reportDirectory: 'frontend/community-frontend/coverage'


  - stage: Package
    jobs:
      - job: CreateArtifact
        steps:
          - task: CopyFiles@2
            inputs:
              contents: |
                frontend/auth-frontend/dist/**
                frontend/community-frontend/dist/**
                backend/**
              targetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
